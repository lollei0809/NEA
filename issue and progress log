13/11/2024:
-   created main guard with implementation of CLI
-   discovered the question type did not get the correct conversion (ubtd instead of dtub)-->
    now trying to make the type_acr a parameter of the question class to initialise the type correctly
-   discovered a duplicate in a set of plausible answers-->
    checking over duplicate handling in create plausible answers
--> use set data structure to more cleanly ensure no duplicates.
14/11/2024:
-   added class attribute for allowed types
-   fixed checking the user answer. entering int or str
21/11/24:
-   removed getpass
-   made sign in handle incorrect usernames and passwords
-   ensuring incorrect plausible answers are correct type (int not str for base 10)
-   changed score to num correct and incorrect and recorded high score accordingly
--> randomly serve question and weight it towards questions the user got wrong
--> calc_average_correct method to use in automatic question type selection
--> recommend_question method
--> turn details dict into json
22/11/24
-   attempt to integrate json file. can work through console to change num correct incorrect
    and put that in correct location in json file
-   made sure main guard can navigate functions properly
-   worked from real python working with json data. the "interacting with json" could give
    suggestions for the evaluation section on areas to improve
25/11/24
-   calc average correct with exception handling
-   began recommend question method
28/11/24
-   work on reccomend question algithm
5/12/24
-   begin GUI
-   game class with main loop, input handling, game logic and drawing
-   need to have a way to choose a background color
-   problem with pygame that it will not have any packaged up buttons, just areas on the screen that can be clicked:
-   use a tkinter sign in / set up
-   continual loops in both tkinter and pygame so shut down tkinter before running pygame
10/12/24
--> use pygame rects instead of vector2 as velocities not needed, 1d movement.
--> easily change speeds at higher levels by increasing clock tick
12/12/24
-   changing from vector form as each object is only moving in 1 dimension
29/12/24
-   now can move the spaceship with arrowkeys
-   and can move in 2 dimentions idk what i was thinking on the 12th
-   added "friction" to help control the spaceships movents
-   need to work out how to delete the bullet objects when they reach the top
and then use that same method to delete the bullet and answers when they collide.
--> if removed from bullets list maybe that removes all refereces and so it is effectively deleted?
30/12/24
-   added more to the bullet move so if it goes out of frame it is removed
-   added check collision method to game class whcih removes bullets and answers from lists if they collide
-   added to check collision so if correct answer reaches the bottom game over and if answer meets spaceship gameover
-   added score to game class that is incremented when correct answer is shot
--> need to print text to the screen to show the level, score, and when they lose
1/1/2025
-   began tkinter for the signin and game settings
--> need to work out how to sign in vs sign up
2/1/2025
-   included frames in tkinter app for the sign in/up option, sign in,  sign up and game settings
-   linked play button on settings page to start the pygame
--> need to change color before window is created and game begins so game= Game() then change color then play
3/1/2025
--> cant get the order of clicking the color button and starting up pygame and running the main loop
--> putting game = Game() when the settings frame is opened starts an empty pygame frame
-   added set color method to pygame so it can be changed outside the __init__
-   added attribute self.color to tkinter app and the pygame is set up and run when play is pressed
-   added green purple and yellow backgeounds
4/1/2025
-   added options for sounds
--> a bullet reaching the top of the screen in tkinter_page makes error as "game" is not defined?
--> join user to tkinter sign in/out frames
-   updated go to settings method in app to use user functionality and check for password/ add user
--> currently controlling the pygame and user in the tkinter file so maybe need separate controller to involve question
--> modify game.py to include the tkinter and pygame, export some of the methods in the app classof the tkinter
-   added text box class to display the num correct incorrect high score question
-   added game over screen when a correct answer reaches the bottom or all the answers are shot
10/1/2025
-   split game into controller and CLI
--> need to fix type error unhcashable list in gen question type and recommend question